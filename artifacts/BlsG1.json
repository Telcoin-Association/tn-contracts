{
  "abi": [
    {
      "type": "function",
      "name": "B_IN_BYTES",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "EIP2537_FIELD_ELEMENT_SIZE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "EIP2537_G1_POINT_SIZE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "EIP2537_G2_POINT_SIZE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "FIELD_ELEMENT_SIZE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "G1_ADD",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "G1_IDENTITY",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "G2_ADD",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "G2_GENERATOR_NEG",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "G2_IDENTITY",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HASH_TO_G1_DST",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "I2OSP",
      "inputs": [
        { "name": "x", "type": "uint256", "internalType": "uint256" },
        { "name": "xLen", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "L",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAP_FP_TO_G1",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "P",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "PAIRING_CHECK",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "S_IN_BYTES",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addG1",
      "inputs": [
        { "name": "point0", "type": "bytes", "internalType": "bytes" },
        { "name": "point1", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addG2",
      "inputs": [
        { "name": "point0", "type": "bytes", "internalType": "bytes" },
        { "name": "point1", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "eip2537BytesToFieldElement",
      "inputs": [
        { "name": "paddedElement", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "fieldElement", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "encodeG1PointForEIP2537",
      "inputs": [
        {
          "name": "uncompressedSignature",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "encodeG2PointForEIP2537",
      "inputs": [
        {
          "name": "uncompressedPubkey",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "expandMessageXmd",
      "inputs": [
        { "name": "message", "type": "bytes", "internalType": "bytes" },
        { "name": "dst", "type": "bytes", "internalType": "bytes" },
        { "name": "outputLen", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [
        { "name": "result", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "extractBytes",
      "inputs": [
        { "name": "source", "type": "bytes", "internalType": "bytes" },
        { "name": "offset", "type": "uint256", "internalType": "uint256" },
        { "name": "length", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "fieldElementToEIP2537Bytes",
      "inputs": [
        { "name": "source", "type": "bytes", "internalType": "bytes" },
        {
          "name": "sourceOffset",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "dest", "type": "bytes", "internalType": "bytes" },
        { "name": "destOffset", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "hashToField",
      "inputs": [
        { "name": "input", "type": "bytes", "internalType": "bytes" },
        { "name": "dst", "type": "bytes", "internalType": "bytes" },
        { "name": "count", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct BlsG1.Fp[]",
          "components": [
            { "name": "data", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hashToG1",
      "inputs": [{ "name": "input", "type": "bytes", "internalType": "bytes" }],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isInfinityPointG1",
      "inputs": [
        {
          "name": "uncompressedPointG1",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "isInfinityPointG2",
      "inputs": [
        {
          "name": "uncompressedPointG2",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "mapFieldElementToG1",
      "inputs": [
        {
          "name": "element",
          "type": "tuple",
          "internalType": "struct BlsG1.Fp",
          "components": [
            { "name": "data", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "processFieldElement",
      "inputs": [
        { "name": "uniformBytes", "type": "bytes", "internalType": "bytes" },
        { "name": "index", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct BlsG1.Fp",
          "components": [
            { "name": "data", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "validatePointG1",
      "inputs": [{ "name": "point", "type": "bytes", "internalType": "bytes" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "validatePointG2",
      "inputs": [{ "name": "point", "type": "bytes", "internalType": "bytes" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verifyProofOfPossessionG1",
      "inputs": [
        { "name": "blsPubkey", "type": "bytes", "internalType": "bytes" },
        { "name": "signature", "type": "bytes", "internalType": "bytes" },
        { "name": "message", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "error",
      "name": "CountTooLarge",
      "inputs": [
        { "name": "count", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "DSTTooLong",
      "inputs": [
        { "name": "dstLen", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "EllTooLarge",
      "inputs": [
        { "name": "ell", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "I2OSPIntegerTooLarge",
      "inputs": [
        { "name": "i2ospInteger", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "InvalidBLSProof", "inputs": [] },
    { "type": "error", "name": "InvalidBLSPubkey", "inputs": [] },
    { "type": "error", "name": "InvalidFpOffset", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidPoint",
      "inputs": [
        { "name": "actualLen", "type": "uint256", "internalType": "uint256" },
        { "name": "expectedLen", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "InvalidUncompressedBLSPubkey", "inputs": [] },
    {
      "type": "error",
      "name": "LengthTooLarge",
      "inputs": [
        { "name": "len", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "LowLevelCallFailure",
      "inputs": [{ "name": "err", "type": "bytes", "internalType": "bytes" }]
    }
  ],
  "bytecode": {
    "object": "0x611c4b610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610208575f3560e01c8063993c3b2c1161011f578063ba486201116100b4578063e5a837fd11610084578063e5a837fd1461038b578063f171866214610405578063f3aa547914610418578063f490b3b914610420578063f999712f14610433575f80fd5b8063ba486201146103c1578063ba601241146103d4578063bdfc3701146103dd578063bf9d8997146103e5575f80fd5b8063a691a08b116100ef578063a691a08b14610393578063a6f5f324146103a6578063aedd751f1461038b578063b2f0b9b4146103b9575f80fd5b8063993c3b2c1461035d5780639a035a3e146103705780639d9ca562146103835780639f13f76d1461038b575f80fd5b80634f98273b116101a05780638976fc3b116101705780638976fc3b146103075780638b8fbd921461031a5780638eadfb911461032257806392b8b6681461034257806396b5eb771461034a575f80fd5b80634f98273b146102c4578063768c59f3146102d75780637bcd6fd7146102ec5780637fed4c95146102ff575f80fd5b806324cddfa8116101db57806324cddfa81461028e5780633632358c146102a15780633d2a9e11146102a95780634c1dd66e146102bc575f80fd5b8063069eb4f21461020c57806306ac9f9714610235578063086ecef71461025857806308cd4da014610278575b5f80fd5b61021f61021a3660046113c5565b61043b565b60405161022c9190611456565b60405180910390f35b610248610243366004611468565b6104ec565b604051901515815260200161022c565b610260600d81565b6040516001600160a01b03909116815260200161022c565b610280608081565b60405190815260200161022c565b61021f61029c3660046114a1565b61056c565b610260600f81565b61021f6102b7366004611468565b6105f5565b610260600b81565b6102486102d2366004611528565b610668565b6102ea6102e53660046115b3565b61079c565b005b6102486102fa366004611468565b610875565b61021f6108bc565b61021f6103153660046113c5565b6108d8565b61021f6108fa565b610335610330366004611626565b610916565b60405161022c919061167b565b61021f6109c5565b61021f61035836600461168d565b6109e4565b61021f61036b366004611709565b610ce4565b61021f61037e366004611752565b610dc4565b610280603081565b610280604081565b61021f6103a1366004611468565b610eb0565b6102486103b4366004611468565b610f41565b61021f610fb6565b6102486103cf366004611468565b610fe8565b61028061010081565b61021f610ff0565b6103f86103f3366004611772565b610ff7565b60405161022c91906117de565b61021f610413366004611468565b6110e6565b610260601081565b61021f61042e366004611468565b611160565b610280602081565b60605f80600d6001600160a01b0316858560405160200161045d929190611858565b60408051601f19818403018152908290526104779161186c565b5f60405180830381855afa9150503d805f81146104af576040519150601f19603f3d011682016040523d82523d5f602084013e6104b4565b606091505b5091509150816104e257806040516306fe67db60e31b81526004016104d99190611456565b60405180910390fd5b9150505b92915050565b5f60808251141580610502575061050282610fe8565b1561052d57815160405163414cf37560e01b81526004810191909152608060248201526044016104d9565b8151602083012060408051608080825260a0820190925261055d91859190602082018180368337019050506108d8565b80519060200120149050919050565b60605f8060106001600160a01b0316845f015160405161058c919061186c565b5f60405180830381855afa9150503d805f81146105c4576040519150601f19603f3d011682016040523d82523d5f602084013e6105c9565b606091505b5091509150816105ee57806040516306fe67db60e31b81526004016104d99190611456565b9392505050565b6060815160601461061957604051630d09b15360e01b815260040160405180910390fd5b60408051608080825260a082019092525f9160208201818036833701905050905061064383610fe8565b1561064e5792915050565b61065a835f835f61079c565b6104e683603083604061079c565b5f61067284610875565b15610690576040516333a234f960e11b815260040160405180910390fd5b61069983610fe8565b156106b757604051630d09b15360e01b815260040160405180910390fd5b5f6106c1836110e6565b90505f8186866040518061012001604052806101008152602001611b0f61010091396040516020016106f69493929190611877565b60405160208183030381529060405290505f80600f6001600160a01b031683604051610722919061186c565b5f60405180830381855afa9150503d805f811461075a576040519150601f19603f3d011682016040523d82523d5f602084013e61075f565b606091505b50915091508161078457806040516306fe67db60e31b81526004016104d99190611456565b61078d816118a1565b60011498975050505050505050565b83516107a96030856118db565b11156107c85760405163228c451560e11b815260040160405180910390fd5b81516107d56040836118db565b11156107f45760405163228c451560e11b815260040160405180910390fd5b5f5b603081101561086e578461080a82866118db565b8151811061081a5761081a6118ee565b01602001516001600160f81b03191683826108368560106118db565b61084091906118db565b81518110610850576108506118ee565b60200101906001600160f81b03191690815f1a9053506001016107f6565b5050505050565b5f6101005b6040519080825280601f01601f1916602001820160405280156108a4576020820181803683370190505b50805190602001208280519060200120149050919050565b6040518060600160405280602b8152602001611ae4602b913981565b60605f80600b6001600160a01b0316858560405160200161045d929190611858565b604051806060016040528060308152602001611c0f6030913981565b6040805160208101909152606081525f610931836040611902565b90505f61094085836040610ce4565b90505f61097f82604051806040016040528060018152602001600160f81b815250604051806060016040528060308152602001611c0f60309139611233565b604080518181526060810182529192505f91906020820181803683370190505090506109ad825f835f61079c565b60408051602081019091529081529695505050505050565b6040518061012001604052806101008152602001611b0f610100913981565b60605f602060016109f98261ffff87166118db565b610a039190611919565b610a0d919061192c565b905060ff811115610a3457604051637349dd2760e11b8152600481018290526024016104d9565b61ffff8381161115610a5f57604051633531161b60e01b815261ffff841660048201526024016104d9565b835160ff1015610a875783516040516330648ea960e01b81526004016104d991815260200190565b60605f8086905080610a9b82516001610dc4565b604051602001610aac929190611858565b60405160208183030381529060405292505f610ac95f6040610dc4565b90505f610adb8861ffff166002610dc4565b90505f828b83610aec5f6001610dc4565b89604051602001610b0195949392919061194b565b6040516020818303038152906040529050600281604051610b22919061186c565b602060405180830381855afa158015610b3d573d5f803e3d5ffd5b5050506040513d601f19601f82011682018060405250810190610b609190611973565b9450505050505f600282610b75600180610dc4565b85604051602001610b889392919061198a565b60408051601f1981840301815290829052610ba29161186c565b602060405180830381855afa158015610bbd573d5f803e3d5ffd5b5050506040513d601f19601f82011682018060405250810190610be09190611973565b90505f81604051602001610bf691815260200190565b60408051601f1981840301815291905290508160025b868111610cd3578482185f610c22836001610dc4565b90505f600283838b604051602001610c3c9392919061198a565b60408051601f1981840301815290829052610c569161186c565b602060405180830381855afa158015610c71573d5f803e3d5ffd5b5050506040513d601f19601f82011682018060405250810190610c949190611973565b90508581604051602001610ca992919061199e565b60405160208183030381529060405295508094505050508080610ccb906119b6565b915050610c0c565b505095865250939695505050505050565b8251606090610cf383856118db565b1115610d1557604051633531161b60e01b8152600481018390526024016104d9565b5f826001600160401b03811115610d2e57610d2e611328565b6040519080825280601f01601f191660200182016040528015610d58576020820181803683370190505b5090505f5b83811015610dbb5785610d7082876118db565b81518110610d8057610d806118ee565b602001015160f81c60f81b828281518110610d9d57610d9d6118ee565b60200101906001600160f81b03191690815f1a905350600101610d5d565b50949350505050565b6060602082108015610de15750610ddd82610100611aa9565b8310155b15610e0257604051634f783b2f60e01b8152600481018490526024016104d9565b5f826001600160401b03811115610e1b57610e1b611328565b6040519080825280601f01601f191660200182016040528015610e45576020820181803683370190505b5090505f5b83811015610ea857610e5d816008611902565b85901c60f81b8282610e70600188611919565b610e7a9190611919565b81518110610e8a57610e8a6118ee565b60200101906001600160f81b03191690815f1a905350600101610e4a565b509392505050565b6060815160c014610ed457604051631e99df4360e21b815260040160405180910390fd5b6040805161010080825261012082019092525f91602082018180368337019050509050610f0083610875565b15610f0b5792915050565b610f18836030835f61079c565b610f25835f83604061079c565b610f3383609083608061079c565b6104e68360608360c061079c565b5f6101008251141580610f585750610f5882610875565b15610f8457815160405163414cf37560e01b8152600481019190915261010060248201526044016104d9565b8151602083012060408051610100808252610120820190925261055d918591906020820181803683370190505061043b565b6101005b6040519080825280601f01601f191660200182016040528015610fe4576020820181803683370190505b5081565b5f608061087a565b6080610fba565b60605f826001600160401b0381111561101257611012611328565b60405190808252806020026020018201604052801561105257816020015b6040805160208101909152606081528152602001906001900390816110305790505b509050611062604061ffff61192c565b831115611085576040516336b5c98d60e21b8152600481018490526024016104d9565b5f611091604085611902565b90505f61109f8787846109e4565b90505f5b858110156110da576110b58282610916565b8482815181106110c7576110c76118ee565b60209081029190910101526001016110a3565b50919695505050505050565b60605f61110d836040518060600160405280602b8152602001611ae4602b91396002610ff7565b90505f611132825f81518110611125576111256118ee565b602002602001015161056c565b90505f61114b83600181518110611125576111256118ee565b905061115782826108d8565b95945050505050565b606060408251146111905781516040805163414cf37560e01b8152600481019290925260248201526044016104d9565b5f5b6010811015611225578281815181106111ad576111ad6118ee565b01602001516001600160f81b0319161561121d5760405162461bcd60e51b815260206004820152602b60248201527f496e76616c69642070616464696e673a206e6f6e2d7a65726f20696e2066697260448201526a737420313620627974657360a81b60648201526084016104d9565b600101611192565b506104e68260106030610ce4565b60605f80611242868686611255565b91509150816111575761115760126112cc565b5f6060611261836112dd565b1561127c575050604080515f808252602082019092526112c4565b82518551855160405161129b92919084908a908a908a90602001611ab4565b604051602081830303815290604052915060208201818184518360055afa828452910160405291505b935093915050565b634e487b715f52806020526024601cfd5b5f805b825181101561131f578281815181106112fb576112fb6118ee565b01602001516001600160f81b0319161561131757505f92915050565b6001016112e0565b50600192915050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261134b575f80fd5b81356001600160401b0381111561136457611364611328565b604051601f8201601f19908116603f011681016001600160401b038111828210171561139257611392611328565b6040528181528382016020018510156113a9575f80fd5b816020850160208301375f918101602001919091529392505050565b5f80604083850312156113d6575f80fd5b82356001600160401b038111156113eb575f80fd5b6113f78582860161133c565b92505060208301356001600160401b03811115611412575f80fd5b61141e8582860161133c565b9150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6105ee6020830184611428565b5f60208284031215611478575f80fd5b81356001600160401b0381111561148d575f80fd5b6114998482850161133c565b949350505050565b5f602082840312156114b1575f80fd5b81356001600160401b038111156114c6575f80fd5b8201602081850312156114d7575f80fd5b604051602081016001600160401b03811182821017156114f9576114f9611328565b60405281356001600160401b03811115611511575f80fd5b61151d8682850161133c565b825250949350505050565b5f805f6060848603121561153a575f80fd5b83356001600160401b0381111561154f575f80fd5b61155b8682870161133c565b93505060208401356001600160401b03811115611576575f80fd5b6115828682870161133c565b92505060408401356001600160401b0381111561159d575f80fd5b6115a98682870161133c565b9150509250925092565b5f805f80608085870312156115c6575f80fd5b84356001600160401b038111156115db575f80fd5b6115e78782880161133c565b9450506020850135925060408501356001600160401b03811115611609575f80fd5b6116158782880161133c565b949793965093946060013593505050565b5f8060408385031215611637575f80fd5b82356001600160401b0381111561164c575f80fd5b6116588582860161133c565b95602094909401359450505050565b5f8151602084526114996020850182611428565b602081525f6105ee6020830184611667565b5f805f6060848603121561169f575f80fd5b83356001600160401b038111156116b4575f80fd5b6116c08682870161133c565b93505060208401356001600160401b038111156116db575f80fd5b6116e78682870161133c565b925050604084013561ffff811681146116fe575f80fd5b809150509250925092565b5f805f6060848603121561171b575f80fd5b83356001600160401b03811115611730575f80fd5b61173c8682870161133c565b9660208601359650604090950135949350505050565b5f8060408385031215611763575f80fd5b50508035926020909101359150565b5f805f60608486031215611784575f80fd5b83356001600160401b03811115611799575f80fd5b6117a58682870161133c565b93505060208401356001600160401b038111156117c0575f80fd5b6117cc8682870161133c565b93969395505050506040919091013590565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b8281101561183557603f19878603018452611820858351611667565b94506020938401939190910190600101611804565b50929695505050505050565b5f81518060208401855e5f93019283525090919050565b5f6114996118668386611841565b84611841565b5f6105ee8284611841565b5f61189761186661189161188b858a611841565b88611841565b86611841565b9695505050505050565b805160208083015191908110156118c1575f198160200360031b1b821691505b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156104e6576104e66118c7565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176104e6576104e66118c7565b818103818111156104e6576104e66118c7565b5f8261194657634e487b7160e01b5f52601260045260245ffd5b500490565b5f61196861186661189161188b611962868c611841565b8a611841565b979650505050505050565b5f60208284031215611983575f80fd5b5051919050565b8381525f6111576118666020840186611841565b5f6119a98285611841565b9283525050602001919050565b5f600182016119c7576119c76118c7565b5060010190565b6001815b60018411156112c4578085048111156119ed576119ed6118c7565b60018416156119fb57908102905b60019390931c9280026119d2565b5f82611a17575060016104e6565b81611a2357505f6104e6565b8160018114611a395760028114611a4357611a5f565b60019150506104e6565b60ff841115611a5457611a546118c7565b50506001821b6104e6565b5060208310610133831016604e8410600b8410161715611a82575081810a6104e6565b611a8e5f1984846119ce565b805f1904821115611aa157611aa16118c7565b029392505050565b5f6105ee8383611a09565b8681528560208201528460408201525f611ad76118666118916060850188611841565b9897505050505050505056fe424c535f5349475f424c53313233383147315f584d443a5348412d3235365f535357555f524f5f4e554c5f00000000000000000000000000000000024aa2b2f08f0a91260805272dc51051c6e47ad4fa403b02b4510b647ae3d1770bac0326a805bbefd48056c8c121bdb80000000000000000000000000000000013e02b6052719f607dacd3a088274f65596bd0d09920b61ab5da61bbdc7f5049334cf11213945d57e5ac7d055d042b7e000000000000000000000000000000000d1b3cc2c7027888be51d9ef691d77bcb679afda66c73f17f9ee3837a55024f78c71363275a75d75d86bab79f74782aa0000000000000000000000000000000013fa4d4a0ad8b1ce186ed5061789213d993923066dddaf1040bc3ff59f825c78df74f2d75467e25e0f55f8a00fa030ed1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaaba164736f6c634300081a000a",
    "sourceMap": "294:20495:225:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;294:20495:225;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x7300000000000000000000000000000000000000003014608060405260043610610208575f3560e01c8063993c3b2c1161011f578063ba486201116100b4578063e5a837fd11610084578063e5a837fd1461038b578063f171866214610405578063f3aa547914610418578063f490b3b914610420578063f999712f14610433575f80fd5b8063ba486201146103c1578063ba601241146103d4578063bdfc3701146103dd578063bf9d8997146103e5575f80fd5b8063a691a08b116100ef578063a691a08b14610393578063a6f5f324146103a6578063aedd751f1461038b578063b2f0b9b4146103b9575f80fd5b8063993c3b2c1461035d5780639a035a3e146103705780639d9ca562146103835780639f13f76d1461038b575f80fd5b80634f98273b116101a05780638976fc3b116101705780638976fc3b146103075780638b8fbd921461031a5780638eadfb911461032257806392b8b6681461034257806396b5eb771461034a575f80fd5b80634f98273b146102c4578063768c59f3146102d75780637bcd6fd7146102ec5780637fed4c95146102ff575f80fd5b806324cddfa8116101db57806324cddfa81461028e5780633632358c146102a15780633d2a9e11146102a95780634c1dd66e146102bc575f80fd5b8063069eb4f21461020c57806306ac9f9714610235578063086ecef71461025857806308cd4da014610278575b5f80fd5b61021f61021a3660046113c5565b61043b565b60405161022c9190611456565b60405180910390f35b610248610243366004611468565b6104ec565b604051901515815260200161022c565b610260600d81565b6040516001600160a01b03909116815260200161022c565b610280608081565b60405190815260200161022c565b61021f61029c3660046114a1565b61056c565b610260600f81565b61021f6102b7366004611468565b6105f5565b610260600b81565b6102486102d2366004611528565b610668565b6102ea6102e53660046115b3565b61079c565b005b6102486102fa366004611468565b610875565b61021f6108bc565b61021f6103153660046113c5565b6108d8565b61021f6108fa565b610335610330366004611626565b610916565b60405161022c919061167b565b61021f6109c5565b61021f61035836600461168d565b6109e4565b61021f61036b366004611709565b610ce4565b61021f61037e366004611752565b610dc4565b610280603081565b610280604081565b61021f6103a1366004611468565b610eb0565b6102486103b4366004611468565b610f41565b61021f610fb6565b6102486103cf366004611468565b610fe8565b61028061010081565b61021f610ff0565b6103f86103f3366004611772565b610ff7565b60405161022c91906117de565b61021f610413366004611468565b6110e6565b610260601081565b61021f61042e366004611468565b611160565b610280602081565b60605f80600d6001600160a01b0316858560405160200161045d929190611858565b60408051601f19818403018152908290526104779161186c565b5f60405180830381855afa9150503d805f81146104af576040519150601f19603f3d011682016040523d82523d5f602084013e6104b4565b606091505b5091509150816104e257806040516306fe67db60e31b81526004016104d99190611456565b60405180910390fd5b9150505b92915050565b5f60808251141580610502575061050282610fe8565b1561052d57815160405163414cf37560e01b81526004810191909152608060248201526044016104d9565b8151602083012060408051608080825260a0820190925261055d91859190602082018180368337019050506108d8565b80519060200120149050919050565b60605f8060106001600160a01b0316845f015160405161058c919061186c565b5f60405180830381855afa9150503d805f81146105c4576040519150601f19603f3d011682016040523d82523d5f602084013e6105c9565b606091505b5091509150816105ee57806040516306fe67db60e31b81526004016104d99190611456565b9392505050565b6060815160601461061957604051630d09b15360e01b815260040160405180910390fd5b60408051608080825260a082019092525f9160208201818036833701905050905061064383610fe8565b1561064e5792915050565b61065a835f835f61079c565b6104e683603083604061079c565b5f61067284610875565b15610690576040516333a234f960e11b815260040160405180910390fd5b61069983610fe8565b156106b757604051630d09b15360e01b815260040160405180910390fd5b5f6106c1836110e6565b90505f8186866040518061012001604052806101008152602001611b0f61010091396040516020016106f69493929190611877565b60405160208183030381529060405290505f80600f6001600160a01b031683604051610722919061186c565b5f60405180830381855afa9150503d805f811461075a576040519150601f19603f3d011682016040523d82523d5f602084013e61075f565b606091505b50915091508161078457806040516306fe67db60e31b81526004016104d99190611456565b61078d816118a1565b60011498975050505050505050565b83516107a96030856118db565b11156107c85760405163228c451560e11b815260040160405180910390fd5b81516107d56040836118db565b11156107f45760405163228c451560e11b815260040160405180910390fd5b5f5b603081101561086e578461080a82866118db565b8151811061081a5761081a6118ee565b01602001516001600160f81b03191683826108368560106118db565b61084091906118db565b81518110610850576108506118ee565b60200101906001600160f81b03191690815f1a9053506001016107f6565b5050505050565b5f6101005b6040519080825280601f01601f1916602001820160405280156108a4576020820181803683370190505b50805190602001208280519060200120149050919050565b6040518060600160405280602b8152602001611ae4602b913981565b60605f80600b6001600160a01b0316858560405160200161045d929190611858565b604051806060016040528060308152602001611c0f6030913981565b6040805160208101909152606081525f610931836040611902565b90505f61094085836040610ce4565b90505f61097f82604051806040016040528060018152602001600160f81b815250604051806060016040528060308152602001611c0f60309139611233565b604080518181526060810182529192505f91906020820181803683370190505090506109ad825f835f61079c565b60408051602081019091529081529695505050505050565b6040518061012001604052806101008152602001611b0f610100913981565b60605f602060016109f98261ffff87166118db565b610a039190611919565b610a0d919061192c565b905060ff811115610a3457604051637349dd2760e11b8152600481018290526024016104d9565b61ffff8381161115610a5f57604051633531161b60e01b815261ffff841660048201526024016104d9565b835160ff1015610a875783516040516330648ea960e01b81526004016104d991815260200190565b60605f8086905080610a9b82516001610dc4565b604051602001610aac929190611858565b60405160208183030381529060405292505f610ac95f6040610dc4565b90505f610adb8861ffff166002610dc4565b90505f828b83610aec5f6001610dc4565b89604051602001610b0195949392919061194b565b6040516020818303038152906040529050600281604051610b22919061186c565b602060405180830381855afa158015610b3d573d5f803e3d5ffd5b5050506040513d601f19601f82011682018060405250810190610b609190611973565b9450505050505f600282610b75600180610dc4565b85604051602001610b889392919061198a565b60408051601f1981840301815290829052610ba29161186c565b602060405180830381855afa158015610bbd573d5f803e3d5ffd5b5050506040513d601f19601f82011682018060405250810190610be09190611973565b90505f81604051602001610bf691815260200190565b60408051601f1981840301815291905290508160025b868111610cd3578482185f610c22836001610dc4565b90505f600283838b604051602001610c3c9392919061198a565b60408051601f1981840301815290829052610c569161186c565b602060405180830381855afa158015610c71573d5f803e3d5ffd5b5050506040513d601f19601f82011682018060405250810190610c949190611973565b90508581604051602001610ca992919061199e565b60405160208183030381529060405295508094505050508080610ccb906119b6565b915050610c0c565b505095865250939695505050505050565b8251606090610cf383856118db565b1115610d1557604051633531161b60e01b8152600481018390526024016104d9565b5f826001600160401b03811115610d2e57610d2e611328565b6040519080825280601f01601f191660200182016040528015610d58576020820181803683370190505b5090505f5b83811015610dbb5785610d7082876118db565b81518110610d8057610d806118ee565b602001015160f81c60f81b828281518110610d9d57610d9d6118ee565b60200101906001600160f81b03191690815f1a905350600101610d5d565b50949350505050565b6060602082108015610de15750610ddd82610100611aa9565b8310155b15610e0257604051634f783b2f60e01b8152600481018490526024016104d9565b5f826001600160401b03811115610e1b57610e1b611328565b6040519080825280601f01601f191660200182016040528015610e45576020820181803683370190505b5090505f5b83811015610ea857610e5d816008611902565b85901c60f81b8282610e70600188611919565b610e7a9190611919565b81518110610e8a57610e8a6118ee565b60200101906001600160f81b03191690815f1a905350600101610e4a565b509392505050565b6060815160c014610ed457604051631e99df4360e21b815260040160405180910390fd5b6040805161010080825261012082019092525f91602082018180368337019050509050610f0083610875565b15610f0b5792915050565b610f18836030835f61079c565b610f25835f83604061079c565b610f3383609083608061079c565b6104e68360608360c061079c565b5f6101008251141580610f585750610f5882610875565b15610f8457815160405163414cf37560e01b8152600481019190915261010060248201526044016104d9565b8151602083012060408051610100808252610120820190925261055d918591906020820181803683370190505061043b565b6101005b6040519080825280601f01601f191660200182016040528015610fe4576020820181803683370190505b5081565b5f608061087a565b6080610fba565b60605f826001600160401b0381111561101257611012611328565b60405190808252806020026020018201604052801561105257816020015b6040805160208101909152606081528152602001906001900390816110305790505b509050611062604061ffff61192c565b831115611085576040516336b5c98d60e21b8152600481018490526024016104d9565b5f611091604085611902565b90505f61109f8787846109e4565b90505f5b858110156110da576110b58282610916565b8482815181106110c7576110c76118ee565b60209081029190910101526001016110a3565b50919695505050505050565b60605f61110d836040518060600160405280602b8152602001611ae4602b91396002610ff7565b90505f611132825f81518110611125576111256118ee565b602002602001015161056c565b90505f61114b83600181518110611125576111256118ee565b905061115782826108d8565b95945050505050565b606060408251146111905781516040805163414cf37560e01b8152600481019290925260248201526044016104d9565b5f5b6010811015611225578281815181106111ad576111ad6118ee565b01602001516001600160f81b0319161561121d5760405162461bcd60e51b815260206004820152602b60248201527f496e76616c69642070616464696e673a206e6f6e2d7a65726f20696e2066697260448201526a737420313620627974657360a81b60648201526084016104d9565b600101611192565b506104e68260106030610ce4565b60605f80611242868686611255565b91509150816111575761115760126112cc565b5f6060611261836112dd565b1561127c575050604080515f808252602082019092526112c4565b82518551855160405161129b92919084908a908a908a90602001611ab4565b604051602081830303815290604052915060208201818184518360055afa828452910160405291505b935093915050565b634e487b715f52806020526024601cfd5b5f805b825181101561131f578281815181106112fb576112fb6118ee565b01602001516001600160f81b0319161561131757505f92915050565b6001016112e0565b50600192915050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261134b575f80fd5b81356001600160401b0381111561136457611364611328565b604051601f8201601f19908116603f011681016001600160401b038111828210171561139257611392611328565b6040528181528382016020018510156113a9575f80fd5b816020850160208301375f918101602001919091529392505050565b5f80604083850312156113d6575f80fd5b82356001600160401b038111156113eb575f80fd5b6113f78582860161133c565b92505060208301356001600160401b03811115611412575f80fd5b61141e8582860161133c565b9150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6105ee6020830184611428565b5f60208284031215611478575f80fd5b81356001600160401b0381111561148d575f80fd5b6114998482850161133c565b949350505050565b5f602082840312156114b1575f80fd5b81356001600160401b038111156114c6575f80fd5b8201602081850312156114d7575f80fd5b604051602081016001600160401b03811182821017156114f9576114f9611328565b60405281356001600160401b03811115611511575f80fd5b61151d8682850161133c565b825250949350505050565b5f805f6060848603121561153a575f80fd5b83356001600160401b0381111561154f575f80fd5b61155b8682870161133c565b93505060208401356001600160401b03811115611576575f80fd5b6115828682870161133c565b92505060408401356001600160401b0381111561159d575f80fd5b6115a98682870161133c565b9150509250925092565b5f805f80608085870312156115c6575f80fd5b84356001600160401b038111156115db575f80fd5b6115e78782880161133c565b9450506020850135925060408501356001600160401b03811115611609575f80fd5b6116158782880161133c565b949793965093946060013593505050565b5f8060408385031215611637575f80fd5b82356001600160401b0381111561164c575f80fd5b6116588582860161133c565b95602094909401359450505050565b5f8151602084526114996020850182611428565b602081525f6105ee6020830184611667565b5f805f6060848603121561169f575f80fd5b83356001600160401b038111156116b4575f80fd5b6116c08682870161133c565b93505060208401356001600160401b038111156116db575f80fd5b6116e78682870161133c565b925050604084013561ffff811681146116fe575f80fd5b809150509250925092565b5f805f6060848603121561171b575f80fd5b83356001600160401b03811115611730575f80fd5b61173c8682870161133c565b9660208601359650604090950135949350505050565b5f8060408385031215611763575f80fd5b50508035926020909101359150565b5f805f60608486031215611784575f80fd5b83356001600160401b03811115611799575f80fd5b6117a58682870161133c565b93505060208401356001600160401b038111156117c0575f80fd5b6117cc8682870161133c565b93969395505050506040919091013590565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b8281101561183557603f19878603018452611820858351611667565b94506020938401939190910190600101611804565b50929695505050505050565b5f81518060208401855e5f93019283525090919050565b5f6114996118668386611841565b84611841565b5f6105ee8284611841565b5f61189761186661189161188b858a611841565b88611841565b86611841565b9695505050505050565b805160208083015191908110156118c1575f198160200360031b1b821691505b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156104e6576104e66118c7565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176104e6576104e66118c7565b818103818111156104e6576104e66118c7565b5f8261194657634e487b7160e01b5f52601260045260245ffd5b500490565b5f61196861186661189161188b611962868c611841565b8a611841565b979650505050505050565b5f60208284031215611983575f80fd5b5051919050565b8381525f6111576118666020840186611841565b5f6119a98285611841565b9283525050602001919050565b5f600182016119c7576119c76118c7565b5060010190565b6001815b60018411156112c4578085048111156119ed576119ed6118c7565b60018416156119fb57908102905b60019390931c9280026119d2565b5f82611a17575060016104e6565b81611a2357505f6104e6565b8160018114611a395760028114611a4357611a5f565b60019150506104e6565b60ff841115611a5457611a546118c7565b50506001821b6104e6565b5060208310610133831016604e8410600b8410161715611a82575081810a6104e6565b611a8e5f1984846119ce565b805f1904821115611aa157611aa16118c7565b029392505050565b5f6105ee8383611a09565b8681528560208201528460408201525f611ad76118666118916060850188611841565b9897505050505050505056fe424c535f5349475f424c53313233383147315f584d443a5348412d3235365f535357555f524f5f4e554c5f00000000000000000000000000000000024aa2b2f08f0a91260805272dc51051c6e47ad4fa403b02b4510b647ae3d1770bac0326a805bbefd48056c8c121bdb80000000000000000000000000000000013e02b6052719f607dacd3a088274f65596bd0d09920b61ab5da61bbdc7f5049334cf11213945d57e5ac7d055d042b7e000000000000000000000000000000000d1b3cc2c7027888be51d9ef691d77bcb679afda66c73f17f9ee3837a55024f78c71363275a75d75d86bab79f74782aa0000000000000000000000000000000013fa4d4a0ad8b1ce186ed5061789213d993923066dddaf1040bc3ff59f825c78df74f2d75467e25e0f55f8a00fa030ed1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaaba164736f6c634300081a000a",
    "sourceMap": "294:20495:225:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12151:267;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7112:315;;;;;;:::i;:::-;;:::i;:::-;;;2456:14:250;;2449:22;2431:41;;2419:2;2404:18;7112:315:225;2283:195:250;1694:46:225;;1735:4;1694:46;;;;;-1:-1:-1;;;;;2655:32:250;;;2637:51;;2625:2;2610:18;1694:46:225;2483:211:250;4194:51:225;;4242:3;4194:51;;;;;2853:25:250;;;2841:2;2826:18;4194:51:225;2699:185:250;11412:236:225;;;;;;:::i;:::-;;:::i;1746:53::-;;1794:4;1746:53;;4606:679;;;;;;:::i;:::-;;:::i;1642:46::-;;1683:4;1642:46;;9758:885;;;;;;:::i;:::-;;:::i;19437:509::-;;;;;;:::i;:::-;;:::i;:::-;;8535:168;;;;;;:::i;:::-;;:::i;3196:84::-;;;:::i;11772:255::-;;;;;;:::i;:::-;;:::i;2588:135::-;;;:::i;17631:691::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1970:566::-;;;:::i;14061:2465::-;;;;;;:::i;:::-;;:::i;18582:364::-;;;;;;:::i;:::-;;:::i;16853:490::-;;;;;;:::i;:::-;;:::i;4043:47::-;;4088:2;4043:47;;3922:30;;3950:2;3922:30;;5827:1086;;;;;;:::i;:::-;;:::i;7626:315::-;;;;;;:::i;:::-;;:::i;2902:68::-;;;:::i;8154:168::-;;;;;;:::i;:::-;;:::i;4251:51::-;;4299:3;4251:51;;2828:68;;;:::i;12947:678::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10893:332::-;;;;;;:::i;:::-;;:::i;1805:52::-;;1852:4;1805:52;;20182:605;;;;;;:::i;:::-;;:::i;3362:39::-;;3399:2;3362:39;;12151:267;12229:12;12254:6;12262:16;1735:4;-1:-1:-1;;;;;12282:23:225;12319:6;12327;12306:28;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12306:28:225;;;;;;;;;;12282:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12253:82;;;;12350:1;12345:45;;12386:3;12360:30;;-1:-1:-1;;;12360:30:225;;;;;;;;:::i;:::-;;;;;;;;12345:45;12408:3;-1:-1:-1;;12151:267:225;;;;;:::o;7112:315::-;7180:4;4242:3;7200:5;:12;:37;;:65;;;;7241:24;7259:5;7241:17;:24::i;:::-;7196:152;;;7301:12;;7288:49;;-1:-1:-1;;;7288:49:225;;;;;10351:25:250;;;;4242:3:225;10392:18:250;;;10385:34;10324:18;;7288:49:225;10177:248:250;7196:152:225;7404:16;;;;;;2864:32;;;4242:3;2864:32;;;;;;;;;7374:25;;7404:16;;2864:32;;;;;;;;;;;-1:-1:-1;2864:32:225;7374:5;:25::i;:::-;7364:36;;;;;;:56;7357:63;;7112:315;;;:::o;11412:236::-;11481:12;11506:6;11514:16;1852:4;-1:-1:-1;;;;;11534:23:225;11558:7;:12;;;11534:37;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11505:66;;;;11586:1;11581:39;;11616:3;11596:24;;-1:-1:-1;;;11596:24:225;;;;;;;;:::i;11581:39::-;11638:3;11412:236;-1:-1:-1;;;11412:236:225:o;4606:679::-;4698:12;4726:21;:28;4758:2;4726:34;4722:89;;4783:17;;-1:-1:-1;;;4783:17:225;;;;;;;;;;;4722:89;4931:32;;;4242:3;4931:32;;;;;;;;;4908:20;;4931:32;;;;;;;;;;-1:-1:-1;4931:32:225;4908:55;;4977:40;4995:21;4977:17;:40::i;:::-;4973:60;;;5026:7;4606:679;-1:-1:-1;;4606:679:225:o;4973:60::-;5113:64;5140:21;5163:1;5166:7;5175:1;5113:26;:64::i;:::-;5187:66;5214:21;5237:2;5241:7;5250:2;5187:26;:66::i;9758:885::-;9940:4;10063:28;10081:9;10063:17;:28::i;:::-;10059:59;;;10100:18;;-1:-1:-1;;;10100:18:225;;;;;;;;;;;10059:59;10132:28;10150:9;10132:17;:28::i;:::-;10128:58;;;10169:17;;-1:-1:-1;;;10169:17:225;;;;;;;;;;;10128:58;10257:29;10289:17;10298:7;10289:8;:17::i;:::-;10257:49;;10316:18;10350:16;10368:9;10379;10390:16;;;;;;;;;;;;;;;;;10337:70;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10316:91;;10418:6;10426:16;1794:4;-1:-1:-1;;;;;10446:24:225;10471:5;10446:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10417:60;;;;10492:1;10487:39;;10522:3;10502:24;;-1:-1:-1;;;10502:24:225;;;;;;;;:::i;10487:39::-;10618:12;10626:3;10618:12;:::i;:::-;10635:1;10610:26;;9758:885;-1:-1:-1;;;;;;;;9758:885:225:o;19437:509::-;19675:13;;19639:33;4088:2;19639:12;:33;:::i;:::-;:49;19635:79;;;19697:17;;-1:-1:-1;;;19697:17:225;;;;;;;;;;;19635:79;19770:11;;19728:39;4186:2;19728:10;:39;:::i;:::-;:53;19724:83;;;19790:17;;-1:-1:-1;;;19790:17:225;;;;;;;;;;;19724:83;19823:9;19818:122;4088:2;19834:1;:22;19818:122;;;19905:6;19912:16;19927:1;19912:12;:16;:::i;:::-;19905:24;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;19905:24:225;19877:4;19900:1;19882:15;:10;19895:2;19882:15;:::i;:::-;:19;;;;:::i;:::-;19877:25;;;;;;;;:::i;:::-;;;;:52;-1:-1:-1;;;;;19877:52:225;;;;;;;;-1:-1:-1;19858:3:225;;19818:122;;;;19437:509;;;;:::o;8535:168::-;8617:4;4299:3;2938:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2938:32:225;;8674:22;;;;;;8650:19;8640:30;;;;;;:56;8633:63;;8535:168;;;:::o;3196:84::-;;;;;;;;;;;;;;;;;;;:::o;11772:255::-;11850:12;11875:6;11883:16;1683:4;-1:-1:-1;;;;;11903:17:225;11934:6;11942;11921:28;;;;;;;;;:::i;2588:135::-;;;;;;;;;;;;;;;;;;;:::o;17631:691::-;-1:-1:-1;;;;;;;;;;;;17841:17:225;17861:9;17865:5;3950:2;17861:9;:::i;:::-;17841:29;;17935:15;17953:40;17966:12;17980:9;3950:2;17953:12;:40::i;:::-;17935:58;;18103:15;18121:27;18133:2;18121:27;;;;;;;;;;;;;-1:-1:-1;;;18121:27:225;;;18146:1;;;;;;;;;;;;;;;;;18121:11;:27::i;:::-;3950:2;18225:12;;;;;;;;;;18103:45;;-1:-1:-1;18205:17:225;;18225:12;;;;;;;;;;;-1:-1:-1;18225:12:225;18205:32;;18247:42;18274:2;18278:1;18281:4;18287:1;18247:26;:42::i;:::-;18307:8;;;;;;;;;;;;;17631:691;-1:-1:-1;;;;;;17631:691:225:o;1970:566::-;;;;;;;;;;;;;;;;;;;:::o;14061:2465::-;14220:19;14304:11;3399:2;14344:1;14319:22;3399:2;14319:22;;;;:::i;:::-;:26;;;;:::i;:::-;14318:41;;;;:::i;:::-;14304:55;-1:-1:-1;14452:15:225;14446:21;;14442:50;;;14476:16;;-1:-1:-1;;;14476:16:225;;;;;2853:25:250;;;2826:18;;14476:16:225;2699:185:250;14442:50:225;14518:16;14506:28;;;;14502:66;;;14543:25;;-1:-1:-1;;;14543:25:225;;12529:6:250;12517:19;;14543:25:225;;;12499:38:250;12472:18;;14543:25:225;12354:189:250;14502:66:225;14582:17;;14602:15;-1:-1:-1;14578:77:225;;;14643:3;14637:17;14626:29;;-1:-1:-1;;;14626:29:225;;;;;;2853:25:250;;2841:2;2826:18;;2699:185;14578:77:225;14666:21;14697:10;14784:21;14814:3;14784:34;;14856:8;14866:25;14872:8;:15;14889:1;14866:5;:25::i;:::-;14843:49;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14832:60;;15001:18;15022:20;15028:1;3498:2;15022:5;:20::i;:::-;15001:41;;15056:22;15081:28;15095:9;15087:18;;15107:1;15081:5;:28::i;:::-;15056:53;;15204:21;15241:5;15248:7;15257:9;15268:11;15274:1;15277;15268:5;:11::i;:::-;15281:8;15228:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15204:86;;15344:16;15351:8;15344:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15339:21;;14717:654;;;;15451:10;15464:51;15488:2;15492:11;15498:1;15501;15492:5;:11::i;:::-;15505:8;15471:43;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;15471:43:225;;;;;;;;;;15464:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15451:64;;15627:25;15672:2;15655:20;;;;;;13868:19:250;;13912:2;13903:12;;13739:182;15655:20:225;;;;-1:-1:-1;;15655:20:225;;;;;;;;;;-1:-1:-1;15709:2:225;15786:1;15769:518;15794:3;15789:1;:8;15769:518;;15880:14;;;15861:16;15934:11;15940:1;15943;15934:5;:11::i;:::-;15912:33;;16042:10;16055:48;16075:8;16085:6;16093:8;16062:40;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;16062:40:225;;;;;;;;;;16055:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16042:61;;16223:12;16237:2;16206:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16191:49;;16270:2;16258:14;;15804:483;;;15799:3;;;;;:::i;:::-;;;;15769:518;;;-1:-1:-1;;16485:25:225;;;-1:-1:-1;16310:12:225;;14061:2465;-1:-1:-1;;;;;;14061:2465:225:o;18582:364::-;18724:13;;18678:12;;18706:15;18715:6;18706;:15;:::i;:::-;:31;18702:66;;;18746:22;;-1:-1:-1;;;18746:22:225;;;;;2853:25:250;;;2826:18;;18746:22:225;2699:185:250;18702:66:225;18779:19;18811:6;-1:-1:-1;;;;;18801:17:225;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18801:17:225;;18779:39;;18833:9;18828:88;18848:6;18844:1;:10;18828:88;;;18887:6;18894:10;18903:1;18894:6;:10;:::i;:::-;18887:18;;;;;;;;:::i;:::-;;;;;;;;;18875:6;18882:1;18875:9;;;;;;;;:::i;:::-;;;;:30;-1:-1:-1;;;;;18875:30:225;;;;;;;;-1:-1:-1;18856:3:225;;18828:88;;;-1:-1:-1;18933:6:225;18582:364;-1:-1:-1;;;;18582:364:225:o;16853:490::-;16914:12;17033:2;17026:4;:9;:29;;;;-1:-1:-1;17044:11:225;17051:4;17044:3;:11;:::i;:::-;17039:1;:16;;17026:29;17022:90;;;17078:23;;-1:-1:-1;;;17078:23:225;;;;;2853:25:250;;;2826:18;;17078:23:225;2699:185:250;17022:90:225;17122:18;17153:4;-1:-1:-1;;;;;17143:15:225;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17143:15:225;;17122:36;;17173:9;17168:146;17188:4;17184:1;:8;17168:146;;;17295:5;17299:1;17295;:5;:::i;:::-;17289:12;;;17276:27;;17254:5;17271:1;17260:8;17267:1;17260:4;:8;:::i;:::-;:12;;;;:::i;:::-;17254:19;;;;;;;;:::i;:::-;;;;:49;-1:-1:-1;;;;;17254:49:225;;;;;;;;-1:-1:-1;17194:3:225;;17168:146;;;-1:-1:-1;17331:5:225;16853:490;-1:-1:-1;;;16853:490:225:o;5827:1086::-;5916:12;5944:18;:25;5973:3;5944:32;5940:100;;5999:30;;-1:-1:-1;;;5999:30:225;;;;;;;;;;;5940:100;6161:32;;;4299:3;6161:32;;;;;;;;;6138:20;;6161:32;;;;;;;;;;-1:-1:-1;6161:32:225;6138:55;;6207:37;6225:18;6207:17;:37::i;:::-;6203:57;;;6253:7;5827:1086;-1:-1:-1;;5827:1086:225:o;6203:57::-;6442:62;6469:18;6489:2;6493:7;6502:1;6442:26;:62::i;:::-;6564;6591:18;6611:1;6614:7;6623:2;6564:26;:62::i;:::-;6690:65;6717:18;6737:3;6742:7;6751:3;6690:26;:65::i;:::-;6817:64;6844:18;6864:2;6868:7;6877:3;6817:26;:64::i;7626:315::-;7694:4;4299:3;7714:5;:12;:37;;:65;;;;7755:24;7773:5;7755:17;:24::i;:::-;7710:152;;;7815:12;;7802:49;;-1:-1:-1;;;7802:49:225;;;;;10351:25:250;;;;4299:3:225;10392:18:250;;;10385:34;10324:18;;7802:49:225;10177:248:250;7710:152:225;7918:16;;;;;;2938:32;;;4299:3;2938:32;;;;;;;;;7888:25;;7918:16;;2938:32;;;;;;;;;;;-1:-1:-1;2938:32:225;7888:5;:25::i;2902:68::-;4299:3;2938:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2938:32:225;;2902:68;:::o;8154:168::-;8236:4;4242:3;2864:32;;2828:68;4242:3;2864:32;;12947:678;13042:11;13065:18;13095:5;-1:-1:-1;;;;;13086:15:225;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;13086:15:225;;;;;;;;;;;;;;;-1:-1:-1;13065:36:225;-1:-1:-1;13200:20:225;3950:2;13200:16;:20;:::i;:::-;13192:5;:28;13188:61;;;13229:20;;-1:-1:-1;;;13229:20:225;;;;;2853:25:250;;;2826:18;;13229:20:225;2699:185:250;13188:61:225;13301:15;13326:9;3950:2;13326:5;:9;:::i;:::-;13301:35;;13414:25;13442:38;13459:5;13466:3;13471:8;13442:16;:38::i;:::-;13414:66;;13495:9;13490:105;13510:5;13506:1;:9;13490:105;;;13548:36;13568:12;13582:1;13548:19;:36::i;:::-;13536:6;13543:1;13536:9;;;;;;;;:::i;:::-;;;;;;;;;;:48;13517:3;;13490:105;;;-1:-1:-1;13612:6:225;;12947:678;-1:-1:-1;;;;;;12947:678:225:o;10893:332::-;10952:12;10976:25;11004:37;11016:5;11023:14;;;;;;;;;;;;;;;;;11039:1;11004:11;:37::i;:::-;10976:65;;11051:19;11073:37;11093:13;11107:1;11093:16;;;;;;;;:::i;:::-;;;;;;;11073:19;:37::i;:::-;11051:59;;11120:19;11142:37;11162:13;11176:1;11162:16;;;;;;;;:::i;11142:37::-;11120:59;;11197:21;11203:6;11211;11197:5;:21::i;:::-;11190:28;10893:332;-1:-1:-1;;;;;10893:332:225:o;20182:605::-;20269:25;4186:2;20310:13;:20;:50;20306:150;;20396:20;;4186:2;20383:62;;-1:-1:-1;;;20383:62:225;;;;;10351:25:250;;;;10392:18;;;10385:34;10324:18;;20383:62:225;10177:248:250;20306:150:225;20540:9;20535:135;20559:2;20555:1;:6;20535:135;;;20590:13;20604:1;20590:16;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;20590:16:225;:21;20582:77;;;;-1:-1:-1;;;20582:77:225;;16006:2:250;20582:77:225;;;15988:21:250;16045:2;16025:18;;;16018:30;16084:34;16064:18;;;16057:62;-1:-1:-1;;;16135:18:250;;;16128:41;16186:19;;20582:77:225;15804:407:250;20582:77:225;20563:3;;20535:135;;;;20745:35;20758:13;20773:2;20777;20745:12;:35::i;18628:280:159:-;18715:12;18740;18754:19;18777:18;18787:1;18790;18793;18777:9;:18::i;:::-;18739:56;;;;18810:7;18805:74;;18833:35;1035:4:151;18833:11:159;:35::i;19007:926::-;19127:12;19141:19;19176:13;19187:1;19176:10;:13::i;:::-;19172:47;;;-1:-1:-1;;19206:12:159;;;19199:5;19206:12;;;;;;;;;19191:28;;19172:47;19245:8;;19361;;19371;;19344:51;;;;19361:8;19371;19245;;19361:1;;19371;;19245;;19344:51;;;:::i;:::-;;;;;;;;;;;;;19335:60;;19472:4;19464:6;19460:17;19635:4;19626:7;19617:6;19611:13;19602:7;19596:4;19589:5;19578:62;19789:20;;;19898:18;;19892:4;19885:32;19567:73;-1:-1:-1;19007:926:159;;;;;;;:::o;1776:194:151:-;1881:10;1875:4;1868:24;1918:4;1912;1905:18;1949:4;1943;1936:18;20016:248:159;20082:4;;20098:139;20122:9;:16;20118:1;:20;20098:139;;;20163:9;20173:1;20163:12;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;20163:12:159;:17;20159:68;;-1:-1:-1;20207:5:159;;20016:248;-1:-1:-1;;20016:248:159:o;20159:68::-;20140:3;;20098:139;;;-1:-1:-1;20253:4:159;;20016:248;-1:-1:-1;;20016:248:159:o;14:127:250:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:745;188:5;241:3;234:4;226:6;222:17;218:27;208:55;;259:1;256;249:12;208:55;299:6;286:20;-1:-1:-1;;;;;321:6:250;318:30;315:56;;;351:18;;:::i;:::-;420:2;414:9;512:2;474:17;;-1:-1:-1;;470:31:250;;;503:2;466:40;462:54;450:67;;-1:-1:-1;;;;;532:34:250;;568:22;;;529:62;526:88;;;594:18;;:::i;:::-;630:2;623:22;654;;;695:19;;;716:4;691:30;688:39;-1:-1:-1;685:59:250;;;740:1;737;730:12;685:59;804:6;797:4;789:6;785:17;778:4;770:6;766:17;753:58;859:1;831:19;;;852:4;827:30;820:41;;;;835:6;146:745;-1:-1:-1;;;146:745:250:o;896:534::-;982:6;990;1043:2;1031:9;1022:7;1018:23;1014:32;1011:52;;;1059:1;1056;1049:12;1011:52;1099:9;1086:23;-1:-1:-1;;;;;1124:6:250;1121:30;1118:50;;;1164:1;1161;1154:12;1118:50;1187:49;1228:7;1219:6;1208:9;1204:22;1187:49;:::i;:::-;1177:59;;;1289:2;1278:9;1274:18;1261:32;-1:-1:-1;;;;;1308:8:250;1305:32;1302:52;;;1350:1;1347;1340:12;1302:52;1373:51;1416:7;1405:8;1394:9;1390:24;1373:51;:::i;:::-;1363:61;;;896:534;;;;;:::o;1435:288::-;1476:3;1514:5;1508:12;1541:6;1536:3;1529:19;1597:6;1590:4;1583:5;1579:16;1572:4;1567:3;1563:14;1557:47;1649:1;1642:4;1633:6;1628:3;1624:16;1620:27;1613:38;1712:4;1705:2;1701:7;1696:2;1688:6;1684:15;1680:29;1675:3;1671:39;1667:50;1660:57;;;1435:288;;;;:::o;1728:225::-;1883:2;1872:9;1865:21;1846:4;1903:44;1943:2;1932:9;1928:18;1920:6;1903:44;:::i;1958:320::-;2026:6;2079:2;2067:9;2058:7;2054:23;2050:32;2047:52;;;2095:1;2092;2085:12;2047:52;2135:9;2122:23;-1:-1:-1;;;;;2160:6:250;2157:30;2154:50;;;2200:1;2197;2190:12;2154:50;2223:49;2264:7;2255:6;2244:9;2240:22;2223:49;:::i;:::-;2213:59;1958:320;-1:-1:-1;;;;1958:320:250:o;2889:777::-;2969:6;3022:2;3010:9;3001:7;2997:23;2993:32;2990:52;;;3038:1;3035;3028:12;2990:52;3078:9;3065:23;-1:-1:-1;;;;;3103:6:250;3100:30;3097:50;;;3143:1;3140;3133:12;3097:50;3166:22;;3222:2;3204:16;;;3200:25;3197:45;;;3238:1;3235;3228:12;3197:45;3291:2;3285:9;3333:2;3321:15;;-1:-1:-1;;;;;3351:34:250;;3387:22;;;3348:62;3345:88;;;3413:18;;:::i;:::-;3449:2;3442:22;3489:16;;-1:-1:-1;;;;;3517:32:250;;3514:52;;;3562:1;3559;3552:12;3514:52;3590:44;3626:7;3615:8;3611:2;3607:17;3590:44;:::i;:::-;3575:60;;-1:-1:-1;3582:6:250;2889:777;-1:-1:-1;;;;2889:777:250:o;3671:748::-;3775:6;3783;3791;3844:2;3832:9;3823:7;3819:23;3815:32;3812:52;;;3860:1;3857;3850:12;3812:52;3900:9;3887:23;-1:-1:-1;;;;;3925:6:250;3922:30;3919:50;;;3965:1;3962;3955:12;3919:50;3988:49;4029:7;4020:6;4009:9;4005:22;3988:49;:::i;:::-;3978:59;;;4090:2;4079:9;4075:18;4062:32;-1:-1:-1;;;;;4109:8:250;4106:32;4103:52;;;4151:1;4148;4141:12;4103:52;4174:51;4217:7;4206:8;4195:9;4191:24;4174:51;:::i;:::-;4164:61;;;4278:2;4267:9;4263:18;4250:32;-1:-1:-1;;;;;4297:8:250;4294:32;4291:52;;;4339:1;4336;4329:12;4291:52;4362:51;4405:7;4394:8;4383:9;4379:24;4362:51;:::i;:::-;4352:61;;;3671:748;;;;;:::o;4424:769::-;4528:6;4536;4544;4552;4605:3;4593:9;4584:7;4580:23;4576:33;4573:53;;;4622:1;4619;4612:12;4573:53;4662:9;4649:23;-1:-1:-1;;;;;4687:6:250;4684:30;4681:50;;;4727:1;4724;4717:12;4681:50;4750:49;4791:7;4782:6;4771:9;4767:22;4750:49;:::i;:::-;4740:59;-1:-1:-1;;4868:2:250;4853:18;;4840:32;;-1:-1:-1;4949:2:250;4934:18;;4921:32;-1:-1:-1;;;;;4965:32:250;;4962:52;;;5010:1;5007;5000:12;4962:52;5033:51;5076:7;5065:8;5054:9;5050:24;5033:51;:::i;:::-;4424:769;;;;-1:-1:-1;5023:61:250;;5157:2;5142:18;5129:32;;-1:-1:-1;;;4424:769:250:o;5198:434::-;5275:6;5283;5336:2;5324:9;5315:7;5311:23;5307:32;5304:52;;;5352:1;5349;5342:12;5304:52;5392:9;5379:23;-1:-1:-1;;;;;5417:6:250;5414:30;5411:50;;;5457:1;5454;5447:12;5411:50;5480:49;5521:7;5512:6;5501:9;5497:22;5480:49;:::i;:::-;5470:59;5598:2;5583:18;;;;5570:32;;-1:-1:-1;;;;5198:434:250:o;5637:189::-;5682:3;5726:5;5720:12;5753:4;5748:3;5741:17;5774:46;5814:4;5809:3;5805:14;5791:12;5774:46;:::i;5831:253::-;6010:2;5999:9;5992:21;5973:4;6030:48;6074:2;6063:9;6059:18;6051:6;6030:48;:::i;6089:694::-;6183:6;6191;6199;6252:2;6240:9;6231:7;6227:23;6223:32;6220:52;;;6268:1;6265;6258:12;6220:52;6308:9;6295:23;-1:-1:-1;;;;;6333:6:250;6330:30;6327:50;;;6373:1;6370;6363:12;6327:50;6396:49;6437:7;6428:6;6417:9;6413:22;6396:49;:::i;:::-;6386:59;;;6498:2;6487:9;6483:18;6470:32;-1:-1:-1;;;;;6517:8:250;6514:32;6511:52;;;6559:1;6556;6549:12;6511:52;6582:51;6625:7;6614:8;6603:9;6599:24;6582:51;:::i;:::-;6572:61;;;6683:2;6672:9;6668:18;6655:32;6727:6;6720:5;6716:18;6709:5;6706:29;6696:57;;6749:1;6746;6739:12;6696:57;6772:5;6762:15;;;6089:694;;;;;:::o;6788:554::-;6874:6;6882;6890;6943:2;6931:9;6922:7;6918:23;6914:32;6911:52;;;6959:1;6956;6949:12;6911:52;6999:9;6986:23;-1:-1:-1;;;;;7024:6:250;7021:30;7018:50;;;7064:1;7061;7054:12;7018:50;7087:49;7128:7;7119:6;7108:9;7104:22;7087:49;:::i;:::-;7077:59;7205:2;7190:18;;7177:32;;-1:-1:-1;7306:2:250;7291:18;;;7278:32;;6788:554;-1:-1:-1;;;;6788:554:250:o;7347:346::-;7415:6;7423;7476:2;7464:9;7455:7;7451:23;7447:32;7444:52;;;7492:1;7489;7482:12;7444:52;-1:-1:-1;;7537:23:250;;;7657:2;7642:18;;;7629:32;;-1:-1:-1;7347:346:250:o;7698:648::-;7793:6;7801;7809;7862:2;7850:9;7841:7;7837:23;7833:32;7830:52;;;7878:1;7875;7868:12;7830:52;7918:9;7905:23;-1:-1:-1;;;;;7943:6:250;7940:30;7937:50;;;7983:1;7980;7973:12;7937:50;8006:49;8047:7;8038:6;8027:9;8023:22;8006:49;:::i;:::-;7996:59;;;8108:2;8097:9;8093:18;8080:32;-1:-1:-1;;;;;8127:8:250;8124:32;8121:52;;;8169:1;8166;8159:12;8121:52;8192:51;8235:7;8224:8;8213:9;8209:24;8192:51;:::i;:::-;7698:648;;8182:61;;-1:-1:-1;;;;8312:2:250;8297:18;;;;8284:32;;7698:648::o;8351:815::-;8543:4;8591:2;8580:9;8576:18;8621:2;8610:9;8603:21;8644:6;8679;8673:13;8710:6;8702;8695:22;8748:2;8737:9;8733:18;8726:25;;8810:2;8800:6;8797:1;8793:14;8782:9;8778:30;8774:39;8760:53;;8848:2;8840:6;8836:15;8869:1;8879:258;8893:6;8890:1;8887:13;8879:258;;;8986:2;8982:7;8970:9;8962:6;8958:22;8954:36;8949:3;8942:49;9014:43;9050:6;9041;9035:13;9014:43;:::i;:::-;9004:53;-1:-1:-1;9092:2:250;9115:12;;;;9080:15;;;;;8915:1;8908:9;8879:258;;;-1:-1:-1;9154:6:250;;8351:815;-1:-1:-1;;;;;;8351:815:250:o;9171:238::-;9239:3;9277:5;9271:12;9321:6;9314:4;9307:5;9303:16;9298:3;9292:36;9383:1;9347:16;;9372:13;;;-1:-1:-1;9347:16:250;;9171:238;-1:-1:-1;9171:238:250:o;9414:315::-;9589:3;9614:109;9666:56;9718:3;9710:6;9666:56;:::i;:::-;9658:6;9614:109;:::i;9734:216::-;9863:3;9888:56;9940:3;9932:6;9888:56;:::i;10430:513::-;10697:3;10722:215;10774:162;10826:109;10878:56;10930:3;10922:6;10878:56;:::i;:::-;10870:6;10826:109;:::i;:::-;10818:6;10774:162;:::i;10722:215::-;10715:222;10430:513;-1:-1:-1;;;;;;10430:513:250:o;10948:297::-;11066:12;;11113:4;11102:16;;;11096:23;;11066:12;11131:16;;11128:111;;;11225:1;11221:6;11211;11205:4;11201:17;11198:1;11194:25;11190:38;11183:5;11179:50;11170:59;;11128:111;;10948:297;;;:::o;11250:127::-;11311:10;11306:3;11302:20;11299:1;11292:31;11342:4;11339:1;11332:15;11366:4;11363:1;11356:15;11382:125;11447:9;;;11468:10;;;11465:36;;;11481:18;;:::i;11512:127::-;11573:10;11568:3;11564:20;11561:1;11554:31;11604:4;11601:1;11594:15;11628:4;11625:1;11618:15;11644:168;11717:9;;;11748;;11765:15;;;11759:22;;11745:37;11735:71;;11786:18;;:::i;11817:128::-;11884:9;;;11905:11;;;11902:37;;;11919:18;;:::i;11950:217::-;11990:1;12016;12006:132;;12060:10;12055:3;12051:20;12048:1;12041:31;12095:4;12092:1;12085:15;12123:4;12120:1;12113:15;12006:132;-1:-1:-1;12152:9:250;;11950:217::o;12548:612::-;12861:3;12886:268;12938:215;12990:162;13042:109;13094:56;13146:3;13138:6;13094:56;:::i;:::-;13086:6;13042:109;:::i;12886:268::-;12879:275;12548:612;-1:-1:-1;;;;;;;12548:612:250:o;13165:184::-;13235:6;13288:2;13276:9;13267:7;13263:23;13259:32;13256:52;;;13304:1;13301;13294:12;13256:52;-1:-1:-1;13327:16:250;;13165:184;-1:-1:-1;13165:184:250:o;13354:380::-;13587:6;13582:3;13575:19;13557:3;13610:118;13662:65;13723:2;13718:3;13714:12;13706:6;13662:65;:::i;13926:310::-;14083:3;14114:56;14166:3;14158:6;14114:56;:::i;:::-;14179:21;;;-1:-1:-1;;14227:2:250;14216:14;;13926:310;-1:-1:-1;13926:310:250:o;14241:135::-;14280:3;14301:17;;;14298:43;;14321:18;;:::i;:::-;-1:-1:-1;14368:1:250;14357:13;;14241:135::o;14381:375::-;14469:1;14487:5;14501:249;14522:1;14512:8;14509:15;14501:249;;;14572:4;14567:3;14563:14;14557:4;14554:24;14551:50;;;14581:18;;:::i;:::-;14631:1;14621:8;14617:16;14614:49;;;14645:16;;;;14614:49;14728:1;14724:16;;;;;14684:15;;14501:249;;14761:902;14810:5;14840:8;14830:80;;-1:-1:-1;14881:1:250;14895:5;;14830:80;14929:4;14919:76;;-1:-1:-1;14966:1:250;14980:5;;14919:76;15011:4;15029:1;15024:59;;;;15097:1;15092:174;;;;15004:262;;15024:59;15054:1;15045:10;;15068:5;;;15092:174;15129:3;15119:8;15116:17;15113:43;;;15136:18;;:::i;:::-;-1:-1:-1;;15192:1:250;15178:16;;15251:5;;15004:262;;15350:2;15340:8;15337:16;15331:3;15325:4;15322:13;15318:36;15312:2;15302:8;15299:16;15294:2;15288:4;15285:12;15281:35;15278:77;15275:203;;;-1:-1:-1;15387:19:250;;;15463:5;;15275:203;15510:42;-1:-1:-1;;15535:8:250;15529:4;15510:42;:::i;:::-;15588:6;15584:1;15580:6;15576:19;15567:7;15564:32;15561:58;;;15599:18;;:::i;:::-;15637:20;;14761:902;-1:-1:-1;;;14761:902:250:o;15668:131::-;15728:5;15757:36;15784:8;15778:4;15757:36;:::i;16216:609::-;16551:6;16546:3;16539:19;16588:6;16583:2;16578:3;16574:12;16567:28;16625:6;16620:2;16615:3;16611:12;16604:28;16521:3;16648:171;16700:118;16752:65;16813:2;16808:3;16804:12;16796:6;16752:65;:::i;16648:171::-;16641:178;16216:609;-1:-1:-1;;;;;;;;16216:609:250:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "B_IN_BYTES()": "f999712f",
    "EIP2537_FIELD_ELEMENT_SIZE()": "aedd751f",
    "EIP2537_G1_POINT_SIZE()": "08cd4da0",
    "EIP2537_G2_POINT_SIZE()": "ba601241",
    "FIELD_ELEMENT_SIZE()": "9d9ca562",
    "G1_ADD()": "4c1dd66e",
    "G1_IDENTITY()": "bdfc3701",
    "G2_ADD()": "086ecef7",
    "G2_GENERATOR_NEG()": "92b8b668",
    "G2_IDENTITY()": "b2f0b9b4",
    "HASH_TO_G1_DST()": "7fed4c95",
    "I2OSP(uint256,uint256)": "9a035a3e",
    "L()": "9f13f76d",
    "MAP_FP_TO_G1()": "f3aa5479",
    "P()": "8b8fbd92",
    "PAIRING_CHECK()": "3632358c",
    "S_IN_BYTES()": "e5a837fd",
    "addG1(bytes,bytes)": "8976fc3b",
    "addG2(bytes,bytes)": "069eb4f2",
    "eip2537BytesToFieldElement(bytes)": "f490b3b9",
    "encodeG1PointForEIP2537(bytes)": "3d2a9e11",
    "encodeG2PointForEIP2537(bytes)": "a691a08b",
    "expandMessageXmd(bytes,bytes,uint16)": "96b5eb77",
    "extractBytes(bytes,uint256,uint256)": "993c3b2c",
    "fieldElementToEIP2537Bytes(bytes,uint256,bytes,uint256)": "768c59f3",
    "hashToField(bytes,bytes,uint256)": "bf9d8997",
    "hashToG1(bytes)": "f1718662",
    "isInfinityPointG1(bytes)": "ba486201",
    "isInfinityPointG2(bytes)": "7bcd6fd7",
    "mapFieldElementToG1(BlsG1.Fp)": "24cddfa8",
    "processFieldElement(bytes,uint256)": "8eadfb91",
    "validatePointG1(bytes)": "06ac9f97",
    "validatePointG2(bytes)": "a6f5f324",
    "verifyProofOfPossessionG1(bytes,bytes,bytes)": "4f98273b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"CountTooLarge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dstLen\",\"type\":\"uint256\"}],\"name\":\"DSTTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ell\",\"type\":\"uint256\"}],\"name\":\"EllTooLarge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i2ospInteger\",\"type\":\"uint256\"}],\"name\":\"I2OSPIntegerTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBLSProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBLSPubkey\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFpOffset\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"actualLen\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedLen\",\"type\":\"uint256\"}],\"name\":\"InvalidPoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUncompressedBLSPubkey\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"LengthTooLarge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"LowLevelCallFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"B_IN_BYTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP2537_FIELD_ELEMENT_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP2537_G1_POINT_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP2537_G2_POINT_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FIELD_ELEMENT_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"G1_ADD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"G1_IDENTITY\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"G2_ADD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"G2_GENERATOR_NEG\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"G2_IDENTITY\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HASH_TO_G1_DST\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xLen\",\"type\":\"uint256\"}],\"name\":\"I2OSP\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"L\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAP_FP_TO_G1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"P\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAIRING_CHECK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"S_IN_BYTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"point0\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"point1\",\"type\":\"bytes\"}],\"name\":\"addG1\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"point0\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"point1\",\"type\":\"bytes\"}],\"name\":\"addG2\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"paddedElement\",\"type\":\"bytes\"}],\"name\":\"eip2537BytesToFieldElement\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"fieldElement\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"uncompressedSignature\",\"type\":\"bytes\"}],\"name\":\"encodeG1PointForEIP2537\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"uncompressedPubkey\",\"type\":\"bytes\"}],\"name\":\"encodeG2PointForEIP2537\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"dst\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"outputLen\",\"type\":\"uint16\"}],\"name\":\"expandMessageXmd\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"source\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"extractBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"source\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"sourceOffset\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dest\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"destOffset\",\"type\":\"uint256\"}],\"name\":\"fieldElementToEIP2537Bytes\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"dst\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"hashToField\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct BlsG1.Fp[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"hashToG1\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"uncompressedPointG1\",\"type\":\"bytes\"}],\"name\":\"isInfinityPointG1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"uncompressedPointG2\",\"type\":\"bytes\"}],\"name\":\"isInfinityPointG2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct BlsG1.Fp\",\"name\":\"element\",\"type\":\"tuple\"}],\"name\":\"mapFieldElementToG1\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"uniformBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"processFieldElement\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct BlsG1.Fp\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"point\",\"type\":\"bytes\"}],\"name\":\"validatePointG1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"point\",\"type\":\"bytes\"}],\"name\":\"validatePointG2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blsPubkey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"verifyProofOfPossessionG1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Telcoin Association\",\"kind\":\"dev\",\"methods\":{\"I2OSP(uint256,uint256)\":{\"details\":\"Convert nonnegative integer to its big-endian byte representation as per RFC8017::4.1 https://datatracker.ietf.org/doc/html/rfc8017#section-4.1\",\"params\":{\"x\":\"Nonnegative integer to convert\",\"xLen\":\"Length for the output octet byte array\"},\"returns\":{\"_0\":\"_ The resulting octet byte array\"}},\"addG1(bytes,bytes)\":{\"details\":\"Adds two G1 curve points using the G1 addition precompile\",\"returns\":{\"_0\":\"_ The G1 point addition result\"}},\"addG2(bytes,bytes)\":{\"details\":\"Adds two G2 curve points using the G2 addition precompile\",\"returns\":{\"_0\":\"_ The G2 point addition result\"}},\"eip2537BytesToFieldElement(bytes)\":{\"details\":\"Extracts a 48-byte BLS12-381 field element from EIP2537 64-byte padded format\",\"params\":{\"paddedElement\":\"64-byte EIP2537 padded field element (16 zeros + 48 bytes)\"},\"returns\":{\"fieldElement\":\"48-byte field element\"}},\"encodeG1PointForEIP2537(bytes)\":{\"details\":\"Encode a BLS12-381 G1 point (signature for min_sig) to EIP2537 format (128 bytes)\",\"params\":{\"uncompressedSignature\":\"96-byte uncompressed G1 point\"},\"returns\":{\"_0\":\"_ EIP2537-compliant, 128-byte encoded G1 point comprising two 64-byte padded field elements (x, y coordinates)\"}},\"encodeG2PointForEIP2537(bytes)\":{\"details\":\"Encode a BLS12-381 G2 point (public key for min_sig) to EIP2537 format (256 bytes)\",\"params\":{\"uncompressedPubkey\":\"192-byte uncompressed G2 point\"},\"returns\":{\"_0\":\"_ EIP2537-compliant, 256-byte encoded G1 point comprising four 64-byte padded field elements (x, y coordinates)\"}},\"expandMessageXmd(bytes,bytes,uint16)\":{\"params\":{\"dst\":\"The domain separation tag as string of at most 255 bytes\",\"message\":\"The input message as bytes\",\"outputLen\":\"The desired output length of the expanded message bytes\"},\"returns\":{\"result\":\"The expanded message as bytes\"}},\"extractBytes(bytes,uint256,uint256)\":{\"details\":\"Extract a slice of bytes from a larger byte array\",\"params\":{\"length\":\"Number of bytes to extract\",\"offset\":\"Starting position in the source array\",\"source\":\"The source byte array\"},\"returns\":{\"_0\":\"_ The extracted bytes\"}},\"fieldElementToEIP2537Bytes(bytes,uint256,bytes,uint256)\":{\"details\":\"Pads a 48-byte BLS12-381 field element to 64 bytes with 16 leading zeros for EIP2537\",\"params\":{\"dest\":\"Destination bytes to write the padded element.\",\"destOffset\":\"Offset in dest where the 64-byte padded element should start, meaning the bytes in range `dest[destOffset:destOffset + 16]` must be zero!\",\"source\":\"Source bytes containing the field element\",\"sourceOffset\":\"Offset in source where the 48-byte field element starts\"}},\"hashToField(bytes,bytes,uint256)\":{\"details\":\"Hash input bytes to field element(s) in BLS12-381 base field Fp as outlined by RFC9380::5.2 https://datatracker.ietf.org/doc/html/rfc9380#name-hash_to_field-implementation\",\"params\":{\"count\":\"The number of field elements to generate\",\"dst\":\"Domain separator tag to prevent collisions between different hash usages\",\"input\":\"The value to hash\"},\"returns\":{\"_0\":\"_ Resulting field elements array\"}},\"hashToG1(bytes)\":{\"details\":\"Hash to a point on the G1 curve using hash-to-curve method outlined by RFC9380::8.8.1 https://datatracker.ietf.org/doc/html/rfc9380#section-3-4.2.1\",\"returns\":{\"_0\":\"_ The deterministic point on G1 curve derived from `input`\"}},\"isInfinityPointG1(bytes)\":{\"details\":\"Checks if an EIP2537-compliant G1 point is the identity (infinity/zero point)\",\"params\":{\"uncompressedPointG1\":\"Is not validated to be a G1 point on the curve; this must be enforced separately\"}},\"isInfinityPointG2(bytes)\":{\"details\":\"Checks if an EIP2537-compliant G2 point is the identity (infinity/zero point)\",\"params\":{\"uncompressedPointG2\":\"Is not validated to be a G2 point on the curve; this must be enforced separately\"}},\"mapFieldElementToG1(BlsG1.Fp)\":{\"details\":\"Maps a field element to a point on the G1 curve using the map-to-curve precompile\",\"params\":{\"element\":\"The field element to map\"},\"returns\":{\"_0\":\"_ The mapped G1 point\"}},\"processFieldElement(bytes,uint256)\":{\"details\":\"Extract and process a single field element from uniform bytes\",\"params\":{\"index\":\"The index of the field element to extract\",\"uniformBytes\":\"The uniform random bytes from an `expand_message` schema (we use xmd)\"},\"returns\":{\"_0\":\"_ The processed field element\"}},\"validatePointG1(bytes)\":{\"details\":\"Validates an EIP2537-compliant G1 point by adding it to the identity using G1_ADD\",\"returns\":{\"_0\":\"_ False if not 128 bytes in length, is not on the curve, or is the identity point\"}},\"validatePointG2(bytes)\":{\"details\":\"Validates an EIP2537-compliant G2 point by adding it to the identity using G2_ADD\",\"returns\":{\"_0\":\"_ False if not 256 bytes in length, is not on the curve, or is the identity point\"}}},\"stateVariables\":{\"B_IN_BYTES\":{\"details\":\"Constants for `expand_message_xmd` variant defined in RFC9380\"},\"EIP2537_FIELD_ELEMENT_SIZE\":{\"details\":\"EIP-2537 encoding sizes\"},\"FIELD_ELEMENT_SIZE\":{\"details\":\"Actual size of BLS12-381 field elements in bytes (381 bits = 48 bytes)\"},\"G1_ADD\":{\"details\":\"Relevant BLS12-381 precompiles\"},\"G1_IDENTITY\":{\"details\":\"The BLS12-381 identity elements (infinity/zero points) encoded to comply with EIP2537\"},\"G2_GENERATOR_NEG\":{\"details\":\"Negation of the BLS12-381 `G2_GENERATOR` point, used for signature pairing checks in our PoP\"},\"HASH_TO_G1_DST\":{\"details\":\"Telcoin-specific Domain Separator Tag for BLS12-381 G1 https://datatracker.ietf.org/doc/html/rfc9380#appendix-J.9.1\"},\"L\":{\"details\":\"L parameter from RFC 9380 for hash-to-field operations guarantees proper statistical distribution in hash-to-field operations L = ceil((ceil(log2(p)) + k) / 8) where: - p is the BLS12-381 field modulus (381 bits) - k is the security parameter (128 bits) - L = ceil((381 + 128) / 8) = ceil(509 / 8) = 64 bytes\"},\"P\":{\"details\":\"381-bit base field prime modulus\"}},\"title\":\"BlsG1 Proof of Possession Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"HASH_TO_G1_DST()\":{\"notice\":\"Used only for single proof of possession checks via blst::min_sig\"},\"encodeG2PointForEIP2537(bytes)\":{\"notice\":\"Coordinate reordering is performed because EIP2537 precompiles expect: `x.c0 || x.c1 || y.c0 || y.c1` This differs from some bls libraries (such as blst used by TN) which serialize to `x.c1 || x.c0 || y.c1 || y.c0`\"},\"expandMessageXmd(bytes,bytes,uint16)\":{\"notice\":\"Expands a message using the expand_message_xmd method as per RFC9380::5.3.1 https://datatracker.ietf.org/doc/html/rfc9380#name-expand_message_xmd\"},\"hashToField(bytes,bytes,uint256)\":{\"notice\":\"Extension degree of field `m = 1` thus simpler `sgn0_m_eq_1(x)` applies\"},\"verifyProofOfPossessionG1(bytes,bytes,bytes)\":{\"notice\":\"Provided parameters must be uncompressed and EIP2537-compliant due to BLS12-381 precompile limitations Uses G2 group for public keys (256bytes for EIP2537) and G1 group for signature (128bytes for EIP2537) Validators must produce BLS sig over their validatorAddress and BLS pubkey to ensure possession Flow: 1. hash `msg = concat(validatorAddress, blsPubkey)` to G1 curve using the RFC9380 hash-to-curve spec   a. hash msg with domain separator to obtain two field elements in the BLS12-381 base field:      `fieldElements = hashToField(msg, domainSeparator, 2)`   b. map each fp field element to a point on the G1 curve using the MAP_FP_TO_G1 precompile:      `point = mapFieldElementToG1(fp)`   c. add the two resulting G1 curve points using the G1_ADD precompile:      `msgPointHash = addG1(point0, point1)` 2. check BLS signature using PAIRING_CHECK precompile:      `concat(msgPointHash, blsPubkey, signature, G2_GENERATOR_NEG)`\"}},\"notice\":\"Utility to perform singular proof of possessions for BLS12-381 using EIP2537\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/consensus/BlsG1.sol\":\"BlsG1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-cgp-solidity/=node_modules/@axelar-network/axelar-cgp-solidity/\",\":@axelar-network/=node_modules/@axelar-network/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":forge-std/=node_modules/forge-std/src/\",\":recoverable-wrapper/contracts/=node_modules/recoverable-wrapper/contracts/\",\":safe-contracts/=node_modules/safe-contracts/\",\":solady/=node_modules/solady/src/\",\":telcoin-contracts/=node_modules/telcoin-contracts/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"src/consensus/BlsG1.sol\":{\"keccak256\":\"0xcdac6bd9af0d50906a2d79585eff0a631bf4206a41f636cbdef3f3904830dde4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bc0a848bd9ec1eaa4bdc38432f45c2e593c2a3b885e2e011ada733e37e94f53\",\"dweb:/ipfs/QmVW35ZwL98u4pzarPJm4gRJzJuPBUa9NFQvpfbWbiMKYh\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "uint256", "name": "count", "type": "uint256" }
          ],
          "type": "error",
          "name": "CountTooLarge"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "dstLen", "type": "uint256" }
          ],
          "type": "error",
          "name": "DSTTooLong"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "ell", "type": "uint256" }
          ],
          "type": "error",
          "name": "EllTooLarge"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i2ospInteger",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "I2OSPIntegerTooLarge"
        },
        { "inputs": [], "type": "error", "name": "InvalidBLSProof" },
        { "inputs": [], "type": "error", "name": "InvalidBLSPubkey" },
        { "inputs": [], "type": "error", "name": "InvalidFpOffset" },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "actualLen",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expectedLen",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidPoint"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidUncompressedBLSPubkey"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "len", "type": "uint256" }
          ],
          "type": "error",
          "name": "LengthTooLarge"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "err", "type": "bytes" }
          ],
          "type": "error",
          "name": "LowLevelCallFailure"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "B_IN_BYTES",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EIP2537_FIELD_ELEMENT_SIZE",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EIP2537_G1_POINT_SIZE",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EIP2537_G2_POINT_SIZE",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FIELD_ELEMENT_SIZE",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "G1_ADD",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "G1_IDENTITY",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "G2_ADD",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "G2_GENERATOR_NEG",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "G2_IDENTITY",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HASH_TO_G1_DST",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "x", "type": "uint256" },
            { "internalType": "uint256", "name": "xLen", "type": "uint256" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "I2OSP",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "L",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAP_FP_TO_G1",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "P",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PAIRING_CHECK",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "S_IN_BYTES",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "point0", "type": "bytes" },
            { "internalType": "bytes", "name": "point1", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addG1",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "point0", "type": "bytes" },
            { "internalType": "bytes", "name": "point1", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addG2",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "paddedElement",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "eip2537BytesToFieldElement",
          "outputs": [
            { "internalType": "bytes", "name": "fieldElement", "type": "bytes" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "uncompressedSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encodeG1PointForEIP2537",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "uncompressedPubkey",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encodeG2PointForEIP2537",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "message", "type": "bytes" },
            { "internalType": "bytes", "name": "dst", "type": "bytes" },
            { "internalType": "uint16", "name": "outputLen", "type": "uint16" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "expandMessageXmd",
          "outputs": [
            { "internalType": "bytes", "name": "result", "type": "bytes" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "source", "type": "bytes" },
            { "internalType": "uint256", "name": "offset", "type": "uint256" },
            { "internalType": "uint256", "name": "length", "type": "uint256" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "extractBytes",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "source", "type": "bytes" },
            {
              "internalType": "uint256",
              "name": "sourceOffset",
              "type": "uint256"
            },
            { "internalType": "bytes", "name": "dest", "type": "bytes" },
            {
              "internalType": "uint256",
              "name": "destOffset",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "fieldElementToEIP2537Bytes"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "input", "type": "bytes" },
            { "internalType": "bytes", "name": "dst", "type": "bytes" },
            { "internalType": "uint256", "name": "count", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hashToField",
          "outputs": [
            {
              "internalType": "struct BlsG1.Fp[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                { "internalType": "bytes", "name": "data", "type": "bytes" }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "input", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hashToG1",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "uncompressedPointG1",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "isInfinityPointG1",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "uncompressedPointG2",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "isInfinityPointG2",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BlsG1.Fp",
              "name": "element",
              "type": "tuple",
              "components": [
                { "internalType": "bytes", "name": "data", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "mapFieldElementToG1",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "uniformBytes",
              "type": "bytes"
            },
            { "internalType": "uint256", "name": "index", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "processFieldElement",
          "outputs": [
            {
              "internalType": "struct BlsG1.Fp",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "bytes", "name": "data", "type": "bytes" }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "point", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validatePointG1",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "point", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validatePointG2",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "blsPubkey", "type": "bytes" },
            { "internalType": "bytes", "name": "signature", "type": "bytes" },
            { "internalType": "bytes", "name": "message", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyProofOfPossessionG1",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "I2OSP(uint256,uint256)": {
            "details": "Convert nonnegative integer to its big-endian byte representation as per RFC8017::4.1 https://datatracker.ietf.org/doc/html/rfc8017#section-4.1",
            "params": {
              "x": "Nonnegative integer to convert",
              "xLen": "Length for the output octet byte array"
            },
            "returns": { "_0": "_ The resulting octet byte array" }
          },
          "addG1(bytes,bytes)": {
            "details": "Adds two G1 curve points using the G1 addition precompile",
            "returns": { "_0": "_ The G1 point addition result" }
          },
          "addG2(bytes,bytes)": {
            "details": "Adds two G2 curve points using the G2 addition precompile",
            "returns": { "_0": "_ The G2 point addition result" }
          },
          "eip2537BytesToFieldElement(bytes)": {
            "details": "Extracts a 48-byte BLS12-381 field element from EIP2537 64-byte padded format",
            "params": {
              "paddedElement": "64-byte EIP2537 padded field element (16 zeros + 48 bytes)"
            },
            "returns": { "fieldElement": "48-byte field element" }
          },
          "encodeG1PointForEIP2537(bytes)": {
            "details": "Encode a BLS12-381 G1 point (signature for min_sig) to EIP2537 format (128 bytes)",
            "params": {
              "uncompressedSignature": "96-byte uncompressed G1 point"
            },
            "returns": {
              "_0": "_ EIP2537-compliant, 128-byte encoded G1 point comprising two 64-byte padded field elements (x, y coordinates)"
            }
          },
          "encodeG2PointForEIP2537(bytes)": {
            "details": "Encode a BLS12-381 G2 point (public key for min_sig) to EIP2537 format (256 bytes)",
            "params": {
              "uncompressedPubkey": "192-byte uncompressed G2 point"
            },
            "returns": {
              "_0": "_ EIP2537-compliant, 256-byte encoded G1 point comprising four 64-byte padded field elements (x, y coordinates)"
            }
          },
          "expandMessageXmd(bytes,bytes,uint16)": {
            "params": {
              "dst": "The domain separation tag as string of at most 255 bytes",
              "message": "The input message as bytes",
              "outputLen": "The desired output length of the expanded message bytes"
            },
            "returns": { "result": "The expanded message as bytes" }
          },
          "extractBytes(bytes,uint256,uint256)": {
            "details": "Extract a slice of bytes from a larger byte array",
            "params": {
              "length": "Number of bytes to extract",
              "offset": "Starting position in the source array",
              "source": "The source byte array"
            },
            "returns": { "_0": "_ The extracted bytes" }
          },
          "fieldElementToEIP2537Bytes(bytes,uint256,bytes,uint256)": {
            "details": "Pads a 48-byte BLS12-381 field element to 64 bytes with 16 leading zeros for EIP2537",
            "params": {
              "dest": "Destination bytes to write the padded element.",
              "destOffset": "Offset in dest where the 64-byte padded element should start, meaning the bytes in range `dest[destOffset:destOffset + 16]` must be zero!",
              "source": "Source bytes containing the field element",
              "sourceOffset": "Offset in source where the 48-byte field element starts"
            }
          },
          "hashToField(bytes,bytes,uint256)": {
            "details": "Hash input bytes to field element(s) in BLS12-381 base field Fp as outlined by RFC9380::5.2 https://datatracker.ietf.org/doc/html/rfc9380#name-hash_to_field-implementation",
            "params": {
              "count": "The number of field elements to generate",
              "dst": "Domain separator tag to prevent collisions between different hash usages",
              "input": "The value to hash"
            },
            "returns": { "_0": "_ Resulting field elements array" }
          },
          "hashToG1(bytes)": {
            "details": "Hash to a point on the G1 curve using hash-to-curve method outlined by RFC9380::8.8.1 https://datatracker.ietf.org/doc/html/rfc9380#section-3-4.2.1",
            "returns": {
              "_0": "_ The deterministic point on G1 curve derived from `input`"
            }
          },
          "isInfinityPointG1(bytes)": {
            "details": "Checks if an EIP2537-compliant G1 point is the identity (infinity/zero point)",
            "params": {
              "uncompressedPointG1": "Is not validated to be a G1 point on the curve; this must be enforced separately"
            }
          },
          "isInfinityPointG2(bytes)": {
            "details": "Checks if an EIP2537-compliant G2 point is the identity (infinity/zero point)",
            "params": {
              "uncompressedPointG2": "Is not validated to be a G2 point on the curve; this must be enforced separately"
            }
          },
          "mapFieldElementToG1(BlsG1.Fp)": {
            "details": "Maps a field element to a point on the G1 curve using the map-to-curve precompile",
            "params": { "element": "The field element to map" },
            "returns": { "_0": "_ The mapped G1 point" }
          },
          "processFieldElement(bytes,uint256)": {
            "details": "Extract and process a single field element from uniform bytes",
            "params": {
              "index": "The index of the field element to extract",
              "uniformBytes": "The uniform random bytes from an `expand_message` schema (we use xmd)"
            },
            "returns": { "_0": "_ The processed field element" }
          },
          "validatePointG1(bytes)": {
            "details": "Validates an EIP2537-compliant G1 point by adding it to the identity using G1_ADD",
            "returns": {
              "_0": "_ False if not 128 bytes in length, is not on the curve, or is the identity point"
            }
          },
          "validatePointG2(bytes)": {
            "details": "Validates an EIP2537-compliant G2 point by adding it to the identity using G2_ADD",
            "returns": {
              "_0": "_ False if not 256 bytes in length, is not on the curve, or is the identity point"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "HASH_TO_G1_DST()": {
            "notice": "Used only for single proof of possession checks via blst::min_sig"
          },
          "encodeG2PointForEIP2537(bytes)": {
            "notice": "Coordinate reordering is performed because EIP2537 precompiles expect: `x.c0 || x.c1 || y.c0 || y.c1` This differs from some bls libraries (such as blst used by TN) which serialize to `x.c1 || x.c0 || y.c1 || y.c0`"
          },
          "expandMessageXmd(bytes,bytes,uint16)": {
            "notice": "Expands a message using the expand_message_xmd method as per RFC9380::5.3.1 https://datatracker.ietf.org/doc/html/rfc9380#name-expand_message_xmd"
          },
          "hashToField(bytes,bytes,uint256)": {
            "notice": "Extension degree of field `m = 1` thus simpler `sgn0_m_eq_1(x)` applies"
          },
          "verifyProofOfPossessionG1(bytes,bytes,bytes)": {
            "notice": "Provided parameters must be uncompressed and EIP2537-compliant due to BLS12-381 precompile limitations Uses G2 group for public keys (256bytes for EIP2537) and G1 group for signature (128bytes for EIP2537) Validators must produce BLS sig over their validatorAddress and BLS pubkey to ensure possession Flow: 1. hash `msg = concat(validatorAddress, blsPubkey)` to G1 curve using the RFC9380 hash-to-curve spec   a. hash msg with domain separator to obtain two field elements in the BLS12-381 base field:      `fieldElements = hashToField(msg, domainSeparator, 2)`   b. map each fp field element to a point on the G1 curve using the MAP_FP_TO_G1 precompile:      `point = mapFieldElementToG1(fp)`   c. add the two resulting G1 curve points using the G1_ADD precompile:      `msgPointHash = addG1(point0, point1)` 2. check BLS signature using PAIRING_CHECK precompile:      `concat(msgPointHash, blsPubkey, signature, G2_GENERATOR_NEG)`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@axelar-cgp-solidity/=node_modules/@axelar-network/axelar-cgp-solidity/",
        "@axelar-network/=node_modules/@axelar-network/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uniswap/=node_modules/@uniswap/",
        "forge-std/=node_modules/forge-std/src/",
        "recoverable-wrapper/contracts/=node_modules/recoverable-wrapper/contracts/",
        "safe-contracts/=node_modules/safe-contracts/",
        "solady/=node_modules/solady/src/",
        "telcoin-contracts/=node_modules/telcoin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "src/consensus/BlsG1.sol": "BlsG1" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "src/consensus/BlsG1.sol": {
        "keccak256": "0xcdac6bd9af0d50906a2d79585eff0a631bf4206a41f636cbdef3f3904830dde4",
        "urls": [
          "bzz-raw://3bc0a848bd9ec1eaa4bdc38432f45c2e593c2a3b885e2e011ada733e37e94f53",
          "dweb:/ipfs/QmVW35ZwL98u4pzarPJm4gRJzJuPBUa9NFQvpfbWbiMKYh"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 225
}
